<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<!--
XML Schema for the EvaML Language
This is EvaML
Copyright : 2024 MIDIACOM LAB, All Rights Reserved.
See https://www.midiacom.uff.br
PublicURI : https://github.com/midiacom/eva-robot/blob/master/EvaML-EvaSIM-source-code/Linux%20Version/EvaML-Schema/evaml_schema.xsd

Developed by Marcelo Marques da Rocha
MidiaCom Laboratory - Universidade Federal Fluminense
This work was funded by CAPES and Google Research

Revision: 2024/09/26
-->
<!-- ** Data type definitions ** -->
	<xs:simpleType name="idType">
		<xs:restriction base="xs:ID"/>
	</xs:simpleType>

	<xs:simpleType name="modeType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ON"/>
			<xs:enumeration value="OFF"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="voiceListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="pt-BR_IsabelaV3Voice"/>
			<xs:enumeration value="en-US_AllisonV3Voice"/> 
			<xs:enumeration value="en-US_AllisonExpressive"/> 
			<xs:enumeration value="en-US_EmmaExpressive"/>
			<xs:enumeration value="en-US_LisaExpressive"/>
			<xs:enumeration value="en-US_MichaelExpressive"/>
			<xs:enumeration value="en-US_MichaelV3Voice"/>
			<xs:enumeration value="en-US_KevinV3Voice"/>
			<xs:enumeration value="en-US_OliviaV3Voice"/>
			<xs:enumeration value="en-US_EmilyV3Voice"/>
			<xs:enumeration value="en-US_HenryV3Voice"/>
			<xs:enumeration value="es-LA_SofiaV3Voice"/>
			<xs:enumeration value="es-ES_LauraV3Voice"/>
			<xs:enumeration value="es-ES_EnriqueV3Voice"/>     
			<xs:enumeration value="fr-FR_NicolasV3Voice"/>
			<xs:enumeration value="fr-FR_ReneeV3Voice"/>
			<xs:enumeration value="de-DE_BirgitV3Voice"/>
			<xs:enumeration value="de-DE_DieterV3Voice"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="headMotionListType">
		<xs:restriction base="xs:string">
			<!-- commands compatible with CICESE servomotor control software (previous version of XMLSchema). -->
			<xs:enumeration value="YES"/>
			<xs:enumeration value="2YES"/>
			<xs:enumeration value="NO"/>
			<xs:enumeration value="2NO"/>
			<xs:enumeration value="CENTER"/>
			<xs:enumeration value="LEFT"/>
			<xs:enumeration value="RIGHT"/>
			<xs:enumeration value="UP"/>
			<xs:enumeration value="DOWN"/>
			<xs:enumeration value="2UP"/>
			<xs:enumeration value="2DOWN"/>
			<xs:enumeration value="2RIGHT"/>
			<xs:enumeration value="2LEFT"/>
			<xs:enumeration value="DOWN_RIGHT"/>
			<xs:enumeration value="2DOWN_RIGHT"/>
			<xs:enumeration value="DOWN_LEFT"/>
			<xs:enumeration value="2DOWN_LEFT"/>
			<xs:enumeration value="UP_RIGHT"/>
			<xs:enumeration value="2UP_RIGHT"/>
			<xs:enumeration value="UP_LEFT"/>
			<xs:enumeration value="2UP_LEFT"/>
			<!-- commands based on the new servomotor control software using the Arduino board. -->
			<xs:enumeration value="UP1"/>
			<xs:enumeration value="UP2"/>
			<xs:enumeration value="DOWN1"/>
			<xs:enumeration value="DOWN2"/>
			<xs:enumeration value="LEFT1"/>
			<xs:enumeration value="LEFT2"/>
			<xs:enumeration value="LEFT3"/>
			<xs:enumeration value="RIGHT1"/>
			<xs:enumeration value="RIGHT2"/>
			<xs:enumeration value="RIGHT3"/>
			<xs:enumeration value="LEFT_UP1"/>
			<xs:enumeration value="LEFT_UP2"/>
			<xs:enumeration value="LEFT_UP3"/>
			<xs:enumeration value="RIGHT_UP1"/>
			<xs:enumeration value="RIGHT_UP2"/>
			<xs:enumeration value="RIGHT_UP3"/>
			<xs:enumeration value="LEFT_DOWN1"/>
			<xs:enumeration value="LEFT_DOWN2"/>
			<xs:enumeration value="LEFT_DOWN3"/>
			<xs:enumeration value="RIGHT_DOWN1"/>
			<xs:enumeration value="RIGHT_DOWN2"/>
			<xs:enumeration value="RIGHT_DOWN3"/>
			<xs:enumeration value="CENTER_X"/>
			<xs:enumeration value="CENTER_Y"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="armMotionListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="POSITION 0"/> <!-- Move arm to starting position (0) -->
			<xs:enumeration value="POSITION 1"/>
			<xs:enumeration value="POSITION 2"/>
			<xs:enumeration value="POSITION 3"/> <!-- Move arm to starting position (3) -->
			<xs:enumeration value="UP"/> <!-- Move arm to next higher position -->
			<xs:enumeration value="DOWN"/> <!-- Move arm to next lower position -->
			<xs:enumeration value="SHAKE1"/> <!-- Swings arm up and down around current position (1 x cycle) -->
			<xs:enumeration value="SHAKE2"/> <!-- Swing arm up and down around current position (2 x cycle) -->
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="voiceStringType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="voiceType">
		<xs:union memberTypes="voiceListType voiceStringType" />
	</xs:simpleType>

	<xs:simpleType name="topicType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="messageType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="audioListType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="efx-blin"/>
			<xs:enumeration value="efx-blin2"/>
			<xs:enumeration value="efx-aplausos-bom"/>
            <xs:enumeration value="efx-cheering"/>
            <xs:enumeration value="efx-crowdapplause1"/>
			<xs:enumeration value="efx-display"/>
			<xs:enumeration value="efx-display2"/>
            <xs:enumeration value="efx-fanfare"/>
			<xs:enumeration value="efx-harp-gliss"/>
            <xs:enumeration value="efx-mario-end-01"/>
            <xs:enumeration value="efx-mario-end-02"/>
            <xs:enumeration value="efx-mario-end-03"/>
            <xs:enumeration value="efx-mario-fundo"/>
            <xs:enumeration value="efx-mario-game-intro"/>
            <xs:enumeration value="efx-mario-sound1-longo"/>
            <xs:enumeration value="efx-mario-sound1"/>
            <xs:enumeration value="efx-mario-sound2"/>
            <xs:enumeration value="efx-mario-start-01"/>
            <xs:enumeration value="efx-mario-start-02"/>
			<xs:enumeration value="efx-robot"/>
			<xs:enumeration value="efx-robot-arm"/>
			<xs:enumeration value="efx-robot-head"/>
			<xs:enumeration value="efx-susto"/>
            <xs:enumeration value="efx-tic-toc"/>
			<xs:enumeration value="efx-trombone-triste"/>
            <xs:enumeration value="efx-wand1"/>
            <xs:enumeration value="MUTED-SOUND"/>
			<xs:enumeration value="song-aquarela"/>
            <xs:enumeration value="song-ben"/>
            <xs:enumeration value="song-caneta-azul"/>
            <xs:enumeration value="song-exodus"/>
			<xs:enumeration value="song-fear"/>
			<xs:enumeration value="song-happy"/>
			<xs:enumeration value="song-i-believe-i-can-fly"/>
			<xs:enumeration value="song-i-will-be-there" />
            <xs:enumeration value="song-mj-heal-the-world"/>
            <xs:enumeration value="song-here-comes-the-sun"/>
			<xs:enumeration value="song-macarena-edit"/>
            <xs:enumeration value="song-mj-heal-the-world"/>
            <xs:enumeration value="song-mj-thriller2"/>
            <xs:enumeration value="song-mj-thriller3-laugh"/>
            <xs:enumeration value="song-oh-no"/>
			<xs:enumeration value="song-rude-magic"/>
			<xs:enumeration value="song-sad-violin"/>
			<xs:enumeration value="song-samba-loop"/>
			<xs:enumeration value="song-surprise"/>
            <xs:enumeration value="song-take-on-me"/>
            <xs:enumeration value="song-the-girl-from-ipanema"/>
            <xs:enumeration value="song-the-imperial-march"/>
            <xs:enumeration value="song-thriller-open"/>
            <xs:enumeration value="song-vivaldi-spring"/>
            <xs:enumeration value="song-weird-science"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="audioStringType">
		<xs:restriction base="xs:string"/>
	</xs:simpleType>

	<xs:simpleType name="audioFileType">
		<xs:union memberTypes="audioListType audioStringType" />
	</xs:simpleType>

	<xs:simpleType name="caseOpType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="exact"/>
			<xs:enumeration value="contain"/>
			<xs:enumeration value="eq"/>
			<xs:enumeration value="lt"/>
			<xs:enumeration value="gt"/>
			<xs:enumeration value="lte"/>
			<xs:enumeration value="gte"/>
			<xs:enumeration value="ne"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="audioBlockType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="TRUE"/>
			<xs:enumeration value="FALSE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="listenLanguageType"> <!-- Language for STT service -->
		<xs:restriction base="xs:string">
			<xs:enumeration value="pt-BR"/> <!-- Portuguese (Brazil) -->
			<xs:enumeration value="en-US"/> <!-- English (EUA) -->
			<xs:enumeration value="es-ES"/> <!-- Spanish (Spain) -->
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ledAnimationType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="HAPPY"/>
			<xs:enumeration value="SAD"/>
			<xs:enumeration value="ANGRY"/>
            <xs:enumeration value="ANGRY2"/>
			<xs:enumeration value="STOP"/>
			<xs:enumeration value="SPEAK"/>
			<xs:enumeration value="LISTEN"/>
			<xs:enumeration value="SURPRISE"/>
            <xs:enumeration value="WHITE"/>
            <xs:enumeration value="RAINBOW"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightStateType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="ON"/>
			<xs:enumeration value="OFF"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightRgbColorType">
		<xs:restriction base="xs:token">
			<xs:pattern value="#[\dA-F | a-f ]{6}([\dA-F | a-f][\dA-F | a-f])?"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightListColorType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="WHITE"/>
			<xs:enumeration value="BLACK"/>
			<xs:enumeration value="RED"/>
			<xs:enumeration value="PINK"/>
			<xs:enumeration value="GREEN"/>
			<xs:enumeration value="YELLOW"/>
			<xs:enumeration value="BLUE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="lightColorType">
		<xs:union memberTypes="lightListColorType lightRgbColorType" />
	</xs:simpleType>

	<xs:simpleType name="logNameType">
		<xs:restriction base="xs:token">
			<!-- A variable name can only start with letters and be followed by letters, numbers and the character -->
			<xs:pattern value="[a-zA-Z][a-zA-Z0-9]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="counterVarType">
		<xs:restriction base="xs:token">
			<!-- A variable name can only start with letters and be followed by letters, numbers and the character _ -->
			<xs:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="counterOpType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="="/>
			<xs:enumeration value="+"/>
			<xs:enumeration value="*"/>
			<xs:enumeration value="/"/>
			<xs:enumeration value="%"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="switchVarOnlyDollar">
		<xs:restriction base="xs:token">
			<xs:pattern value="\$[1-9-]?[0-9]*"/> <!-- Variable of type $. Ex.: $, $1, $-2-->
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="switchVarAll">
		<xs:restriction base="xs:token">
			<!-- A variable name can only start with letters and be followed by letters, numbers and the character _ -->
			<xs:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="switchVarType">
		<!-- The variable is defined as the union (one or the other) of the two types defined previously -->
		<xs:union memberTypes="switchVarOnlyDollar switchVarAll" />
	</xs:simpleType>

	<xs:simpleType name="evaEmotionType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NEUTRAL"/>
			<xs:enumeration value="HAPPY"/>
			<xs:enumeration value="SAD"/>
			<xs:enumeration value="ANGRY"/>
			<xs:enumeration value="FEAR"/>
			<xs:enumeration value="SURPRISE"/>
			<xs:enumeration value="DISGUST"/>
			<xs:enumeration value="INLOVE"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="languageType"> <!-- Some codes for the source languages for Google translating processing -->
		<xs:restriction base="xs:string">
			<xs:enumeration value="PT"/>
			<xs:enumeration value="EN"/>
			<xs:enumeration value="FR"/>
			<xs:enumeration value="DE"/>
		</xs:restriction>
	</xs:simpleType>


  <!-- ** EvaML Commands Definitions ** -->
  <xs:element name="mqtt">
	<xs:complexType>
		<xs:attribute name="topic" type="topicType" use="required"/>
		<xs:attribute name="message" type="messageType" use="required"/>
	</xs:complexType>
</xs:element>

	<xs:element name="random">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="min" type="xs:nonNegativeInteger" use="required"/>
			<xs:attribute name="max" type="xs:nonNegativeInteger" use="required"/>
			<xs:attribute name="var" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="wait">
	  <xs:complexType>
		<xs:attribute name="id" type="idType"/>
	    <xs:attribute name="duration" type="xs:nonNegativeInteger" use="required"/>
	  </xs:complexType>
	</xs:element>

	<xs:element name="talk">
		<xs:complexType mixed="true">
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="tone" type="voiceType"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="log">
		<xs:complexType mixed="true">
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="name" type="logNameType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="stop">
		<xs:complexType>
		</xs:complexType>
	</xs:element>

	<xs:element name="light">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="state" type="lightStateType" use="required"/>
			<xs:attribute name="color" type="lightColorType" default="WHITE"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="goto">
		<xs:complexType>
			<xs:attribute name="target" type="xs:IDREF" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="userEmotion">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="userID">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="qrRead">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="evaEmotion">
		<xs:complexType >
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="emotion" type="evaEmotionType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="textEmotion">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="language" type="languageType"/>
			<xs:attribute name="var" type="xs:string"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="useMacro">
		<xs:complexType>
			<xs:attribute name="macro" type="xs:IDREF" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="listen">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="xs:string"/>
			<!-- The language attribute was not defined as mandatory to maintain compatibility with old scripts -->
			<!-- The default value will be defined in EvaML code function -->
			<xs:attribute name="language" type="listenLanguageType"/> 
		</xs:complexType>
	</xs:element>

	<xs:element name="audio">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="source" type="audioFileType" use="required"/>
			<xs:attribute name="block" type="audioBlockType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="led">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="animation" type="ledAnimationType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="counter">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="counterVarType" use="required"/>
			<xs:attribute name="op" type="counterOpType" use="required"/>
			<xs:attribute name="value" type="xs:integer" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="switch">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="case" minOccurs="1" maxOccurs="unbounded" />
				<xs:element ref="default" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="var" type="switchVarType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="motion">
		<xs:complexType>
			<xs:attribute name="id" type="idType"/>
			<xs:attribute name="type" type="headMotionListType"/> <!-- Still exists to maintain compatibility with the previous model -->
			<!-- New head, leftArm and rightArm features -->
			<xs:attribute name="head" type="headMotionListType"/>
			<xs:attribute name="left-arm" type="armMotionListType"/>
			<xs:attribute name="right-arm" type="armMotionListType"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="voice">
		<xs:complexType>
			<xs:attribute name="tone" type="voiceType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="lightEffects">
		<xs:complexType>
			<xs:attribute name="mode" type="modeType" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="audioEffects">
		<xs:complexType>
			<xs:attribute name="mode" type="modeType" use="required"/>
			<xs:attribute name="vol" type="xs:string" default="100%"/>
		</xs:complexType>
	</xs:element>
    
	<xs:element name="loop">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="mqtt"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="log"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="textEmotion"/>
				<xs:element ref="userID"/>
				<xs:element ref="qrRead"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
			<xs:attribute name="id" type="idType"/>
		    <xs:attribute name="var" type="switchVarType" use="optional"/>
		    <xs:attribute name="times" type="xs:int" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="case">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="mqtt"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="log"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="textEmotion"/>
				<xs:element ref="userID"/>
				<xs:element ref="qrRead"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
			<xs:attribute name="op" type="caseOpType" use="required"/>
			<xs:attribute name="value" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<xs:element name="default">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="mqtt"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="log"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="textEmotion"/>
				<xs:element ref="userID"/>
				<xs:element ref="qrRead"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="macro">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="mqtt"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="log"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="textEmotion"/>
				<xs:element ref="userID"/>
				<xs:element ref="qrRead"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
			<xs:attribute name="id" type="idType" use="required" />
		</xs:complexType>
	</xs:element>

	<!-- ** Root Section Definition ** -->
	<xs:element name="evaml">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="settings"/>
				<xs:element ref="script"/>
				<xs:element ref="macros" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- ** Settings Section Definition ** -->
	<xs:element name="settings">
    <xs:complexType>
			<xs:all>
				<xs:element ref="voice" minOccurs="1" maxOccurs="1"/>
				<xs:element ref="lightEffects" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="audioEffects" minOccurs="0" maxOccurs="1"/>
			</xs:all>
    </xs:complexType>
  </xs:element>

	<!-- ** Script Section Definition ** -->
	<xs:element name="script">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="loop"/>
				<xs:element ref="mqtt"/>
				<xs:element ref="random"/>
				<xs:element ref="wait"/>
				<xs:element ref="talk"/>
				<xs:element ref="log"/>
				<xs:element ref="stop"/>
				<xs:element ref="light"/>
				<xs:element ref="goto"/>
				<xs:element ref="motion"/>
				<xs:element ref="userEmotion"/>
				<xs:element ref="textEmotion"/>
				<xs:element ref="userID"/>
				<xs:element ref="qrRead"/>
				<xs:element ref="evaEmotion"/>
				<xs:element ref="useMacro"/>
				<xs:element ref="listen"/>
				<xs:element ref="audio"/>
				<xs:element ref="led"/>
				<xs:element ref="counter"/>
				<xs:element ref="switch"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<!-- ** Macros Section Definition ** -->
	<xs:element name="macros">
		<xs:complexType>
			<xs:sequence minOccurs="1" maxOccurs="unbounded">
				<xs:element ref="macro"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
